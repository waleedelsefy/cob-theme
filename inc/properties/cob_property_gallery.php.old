<?php
/**
 * Add meta box for Image Gallery and Gallery Schema options.
 */
function cob_add_gallery_meta_box() {
    $screens = array( 'post', 'projects', 'properties', 'factory', 'page' );
    add_meta_box(
        'cob_gallery_meta_box',
        __( 'Image Gallery and Gallery Schema', 'cob_theme' ),
        'cob_gallery_meta_box_callback',
        $screens,
        'normal',
        'high'
    );
}
add_action( 'add_meta_boxes', 'cob_add_gallery_meta_box' );

/**
 * Render the meta box in the edit screen.
 *
 * @param WP_Post $post The current post object.
 */
function cob_gallery_meta_box_callback( $post ) {
    // Add nonce for security.
    wp_nonce_field( 'cob_gallery_nonce_action', 'cob_gallery_nonce' );

    // Retrieve current gallery image IDs.
    $gallery_image_ids = get_post_meta( $post->ID, '_gallery_image_ids', true );
    $gallery_image_ids = is_array( $gallery_image_ids ) ? $gallery_image_ids : array();

    // Retrieve current gallery schema enabled status.
    $gallery_schema_enabled = get_post_meta( $post->ID, '_gallery_schema_enabled', true );
    ?>

    <div id="gallery-wrapper">
        <ul>
            <?php
            foreach ( $gallery_image_ids as $attachment_id ) :
                $img_url = wp_get_attachment_image_url( $attachment_id, 'thumbnail' );
                if ( $img_url ) :
                    ?>
                    <li data-attachment-id="<?php echo esc_attr( $attachment_id ); ?>">
                        <img src="<?php echo esc_url( $img_url ); ?>" alt="<?php echo esc_attr__( 'Gallery Image', 'cob_theme' ); ?>" />
                        <button type="button" class="remove-image-button">×</button>
                    </li>
                <?php
                endif;
            endforeach;
            ?>
        </ul>
        <button id="add-gallery-images" class="button"><?php esc_html_e( 'Add Images', 'cob_theme' ); ?></button>
    </div>

    <input type="hidden" name="gallery_image_ids" id="gallery_image_ids" value="<?php echo esc_attr( implode( ',', $gallery_image_ids ) ); ?>" />

    <!-- Checkbox for enabling Gallery Schema -->
    <p>
        <label for="gallery_schema_enabled">
            <input type="checkbox" name="gallery_schema_enabled" id="gallery_schema_enabled" value="1" <?php checked( $gallery_schema_enabled, '1' ); ?> />
            <?php esc_html_e( 'Enable Gallery Schema', 'cob_theme' ); ?>
        </label>
    </p>

    <style>
        #gallery-wrapper ul {
            list-style: none;
            margin: 0;
            padding: 0;
            overflow: auto;
        }
        #gallery-wrapper ul li {
            float: left;
            margin: 5px;
            position: relative;
        }
        #gallery-wrapper ul li img {
            max-width: 100px;
            height: auto;
            display: block;
        }
        .remove-image-button {
            position: absolute;
            top: 2px;
            right: 2px;
            background: #9f0303;
            color: #fff;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            padding: 2px 5px;
        }
    </style>

    <script>
        jQuery(document).ready(function($) {
            var frame;
            $('#add-gallery-images').on('click', function(e) {
                e.preventDefault();
                if ( frame ) {
                    frame.open();
                    return;
                }
                frame = wp.media({
                    title: '<?php echo esc_js( __( 'Choose Images', 'cob_theme' ) ); ?>',
                    button: {
                        text: '<?php echo esc_js( __( 'Add to Gallery', 'cob_theme' ) ); ?>'
                    },
                    multiple: true
                });
                frame.on('select', function() {
                    var attachments = frame.state().get('selection').map(function(attachment) {
                        attachment = attachment.toJSON();
                        return attachment;
                    });
                    var ids = $('#gallery_image_ids').val() ? $('#gallery_image_ids').val().split(',') : [];
                    attachments.forEach(function(attachment) {
                        ids.push( attachment.id );
                        $('#gallery-wrapper ul').append(
                            '<li data-attachment-id="' + attachment.id + '"><img src="' + attachment.sizes.thumbnail.url + '" alt="<?php echo esc_attr__( 'Gallery Image', 'cob_theme' ); ?>" /><button type="button" class="remove-image-button">×</button></li>'
                        );
                    });
                    $('#gallery_image_ids').val( ids.join(',') );
                });
                frame.open();
            });

            $('#gallery-wrapper').on('click', '.remove-image-button', function() {
                var li = $(this).closest('li');
                var id = li.data('attachment-id').toString();
                li.remove();
                var ids = $('#gallery_image_ids').val().split(',');
                ids = ids.filter(function(item) {
                    return item !== id;
                });
                $('#gallery_image_ids').val( ids.join(',') );
            });
        });
    </script>
    <?php
}

/**
 * Save gallery and schema meta box data.
 *
 * @param int $post_id The ID of the post being saved.
 */
function cob_save_gallery_meta_box( $post_id ) {
    // Check if this is an autosave.
    if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {
        return;
    }
    // Verify nonce.
    if ( ! isset( $_POST['cob_gallery_nonce'] ) || ! wp_verify_nonce( $_POST['cob_gallery_nonce'], 'cob_gallery_nonce_action' ) ) {
        return;
    }
    // Check user capabilities.
    if ( ! current_user_can( 'edit_post', $post_id ) ) {
        return;
    }
    // Check that the post type is supported.
    $supported_post_types = array( 'post', 'projects', 'properties', 'factory' );
    if ( ! in_array( get_post_type( $post_id ), $supported_post_types, true ) ) {
        return;
    }

    // Save gallery image IDs.
    if ( isset( $_POST['gallery_image_ids'] ) ) {
        $ids = sanitize_text_field( $_POST['gallery_image_ids'] );
        $ids_array = array_filter( array_map( 'intval', explode( ',', $ids ) ) );
        update_post_meta( $post_id, '_gallery_image_ids', $ids_array );
    } else {
        delete_post_meta( $post_id, '_gallery_image_ids' );
    }

    // Save gallery schema enabled status.
    $gallery_schema_enabled = isset( $_POST['gallery_schema_enabled'] ) ? '1' : '';
    update_post_meta( $post_id, '_gallery_schema_enabled', $gallery_schema_enabled );
}
add_action( 'save_post', 'cob_save_gallery_meta_box' );

/**
 * Output the image gallery schema markup in the document head.
 */
function cob_output_image_gallery_schema() {
    if ( is_singular( array( 'post', 'projects', 'factory', 'properties' ) ) ) {
        global $post;
        $post_id = $post->ID;
        $gallery_image_ids   = get_post_meta( $post_id, '_gallery_image_ids', true );
        $gallery_schema_enabled = get_post_meta( $post_id, '_gallery_schema_enabled', true );

        if ( $gallery_schema_enabled && ! empty( $gallery_image_ids ) && is_array( $gallery_image_ids ) ) {
            $images = array();

            foreach ( $gallery_image_ids as $attachment_id ) {
                $attachment = get_post( $attachment_id );
                $image_url  = wp_get_attachment_image_url( $attachment_id, 'full' );
                $caption    = wp_get_attachment_caption( $attachment_id );

                $images[] = array(
                    '@type'   => 'ImageObject',
                    'url'     => $image_url,
                    'caption' => $caption ? $caption : $attachment->post_title,
                );
            }
            $ld_json = array(
                '@context'   => 'https://schema.org',
                '@type'      => 'ImageGallery',
                'name'       => get_the_title( $post_id ),
                'url'        => get_permalink( $post_id ),
                'description'=> get_the_excerpt( $post_id ),
                'image'      => $images,
            );

            echo '<script type="application/ld+json">' . wp_json_encode( $ld_json, JSON_UNESCAPED_SLASHES | JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE ) . '</script>';
        }
    }
}
add_action( 'wp_head', 'cob_output_image_gallery_schema' );
